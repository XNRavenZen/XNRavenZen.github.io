(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{621:function(s,e,t){"use strict";t.r(e);var n=t(25),a=Object(n.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("1.建立服务文件\n（1）文件路径")]),s._v(" "),t("p",[s._v("vim /usr/lib/systemd/system/nginx.service\n（2）服务文件内容")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[Unit]# 服务的说明\nDescription=nginx - high performance web server # 描述服务\nAfter=network.target remote-fs.target nss-lookup.target # 描述服务类别\n\n[Service] # 服务运行参数的设置\nType=forking # 是后台运行的形式\nExecStart=/opt/nginx/sbin/nginx # 为服务的具体运行命令\nExecReload=/opt/nginx/sbin/nginx -s reload # 重启命令\nExecStop=/opt/nginx/sbin/nginx -s stop # 停止命令\nPrivateTmp=True # 表示给服务分配独立的临时空间\n\n# 注意：启动、重启、停止命令全部要求使用绝对路径\n\n[Install] # 服务安装的相关设置\nWantedBy=multi-user.target # 设置为多用户\n")])])]),t("p",[s._v("（3）使文件生效")]),s._v(" "),t("p",[s._v("systemctl daemon-reload 2.保存目录\n（1）以 754 的权限保存在目录：")]),s._v(" "),t("p",[s._v("/usr/lib/systemd/system\n（2）设置开机自启动")]),s._v(" "),t("p",[s._v("systemctl enable nginx.service\n（3）启动 nginx 服务")]),s._v(" "),t("p",[s._v("systemctl start nginx.service\n（4）停止开机自启动")]),s._v(" "),t("p",[s._v("systemctl disable nginx.service\n（5）查看服务当前状态")]),s._v(" "),t("p",[s._v("systemctl status nginx.service\n（6）重新启动服务")]),s._v(" "),t("p",[s._v("systemctl restart nginx.service\n（7）查看所有已启动的服务")]),s._v(" "),t("p",[s._v("systemctl list-units --type=service 3.命令集合")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("systemctl is-enabled servicename.service "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查询服务是否开机启动")]),s._v("\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" *.service "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#开机运行服务")]),s._v("\nsystemctl disable *.service "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#取消开机运行")]),s._v("\nsystemctl start *.service "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动服务")]),s._v("\nsystemctl stop *.service "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#停止服务")]),s._v("\nsystemctl restart *.service "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#重启服务")]),s._v("\nsystemctl reload *.service "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#重新加载服务配置文件")]),s._v("\nsystemctl status *.service "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查询服务运行状态")]),s._v("\nsystemctl --failed "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#显示启动失败的服务")]),s._v("\n")])])]),t("p",[s._v("注：*代表某个服务的名字，如 http 的服务名为 httpd")])])}),[],!1,null,null,null);e.default=a.exports}}]);