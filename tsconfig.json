{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig.json to read more about this file */

    /* Basic Options */
    /* 增置编译 Enable incremental compilation */
    // "incremental": true,

    /* 目标语言的版本 Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    // "target": "es5",
    "target": "esnext",

    /* 生成代码的模块标准 Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    // "module": "es2015", //"commonjs",
    // "module":"commonjs",
    "module": "esnext",

    /* TS 需要引用的库，即声明文件 Specify library files to be included in the compilation. */
    // "lib": [],

    /* 允许编译：IS 文件（js、jsx) Allow javascript files to be compiled. */
    // "allowJs": true,

    // "checkJs": true,                       /* 允许在JS文件中报错，通常与allowJS 一起使用 Report errors in .js files. */
    "jsx": "preserve",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    // "declaration": true,                   /* 生成声明文件 Generates corresponding '.d.ts' file. */
    // "declarationMap": true,                /* 生成声明文件的sourceMap文件 Generates a sourcemap for each corresponding '.d.ts' file. */

    /* 生成sourceMap文件 Generates corresponding '.map' file. */
    "sourceMap": true,

    // "outFile": "./",                       /* Concatenate and emit output to single file. */
    // "outDir": "./",                        /* 指定输出目录 Redirect output structure to the directory. */
    // "rootDir": "./",                       /* 指定输入文件目录(用于输出) Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    // "composite": true,                     /* Enable project compilation */
    // "tsBuildInfoFile": "./",               /* Specify file to store incremental compilation information */

    /* 输入文件时删除注释 Do not emit comments to output. */
    "removeComments": true,

    // "noEmit": true,                        /* 不输出文件 Do not emit outputs. */
    // "importHelpers": true,                 /* 通过tslib引入helper函数，文件必须是模块 Import emit helpers from 'tslib'. */
    // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

    /* Strict Type-Checking Options */


    /* 开启所有严格的类型检查 Enable all strict type-checking options. */
    // "strict": true,
    "strict": false,

    // "noImplicitAny": true,                 /* 不允许隐式的any类型 Raise error on expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true,              /* 不允许把null、undefined赋值给其他类型变置 Enable strict null checks. */
    // "strictFunctionTypes": true,           /* 不允许函数参数双向协变 Enable strict checking of function types. */
    // "strictBindCallApply": true,           /* 严格的bind/call/apply检査 Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "strictPropertyInitialization": true,  /* 类的实例属性必须初始化 Enable strict checking of property initialization in classes. */
    // "noImplicitThis": true,                /* 不允许this有隐式的any类型 Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": true,                  /* 在代码中注入"use strict" Parse in strict mode and emit "use strict" for each source file. */

    /* Additional Checks */
    // "noUnusedLocals": true,                /* 检査只声明，未使用的局部变置 Report errors on unused locals. */
    // "noUnusedParameters": true,            /* Report errors on unused parameters. */
    // "noImplicitReturns": true,             /* 每个分支都要有返回值 Report error when not all code paths in function return a value. */
    // "noFallthroughCasesInSwitch": true,    /* 防止switch语句贯穿 Report errors for fallthrough cases in switch statement. */

    /* Module Resolution Options */
    /* 模块解析策略 Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "moduleResolution": "node",

    "baseUrl": "./",                       /* 解析非相对模块的基地址 Base directory to resolve non-absolute module names. */
    "paths": {
      "@/*":["blog/.vuepress/*"]
    },                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],                        /* 将多个目录放在一个虚拟目录下，用于运行时 List of root folders whose combined content represents the structure of the project at runtime. */
    // "typeRoots": [],                       /* 声明文件目录，默认node_modules/@types List of folders to include type definitions from. */

    /* 声明文件包 Type declaration files to be included in compilation. */
    "types": ["vuepress-types","webpack-env"],

    // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */

    /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "esModuleInterop": true,

    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
    // "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */

    /* Source Map Options */
    // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    /* Enables experimental support for ES7 decorators. */
    "experimentalDecorators": true,

    // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */

    /* Advanced Options */
    /* Skip type checking of declaration files. */
    "skipLibCheck": true,

    /* Disallow inconsistently-cased references to the same file. */
    "forceConsistentCasingInFileNames": true 
  },
  "include": [ /* 指定一个匹配列表（属于自动指定该路径下的所有ts相关文件） */
    "blog/**/*",
    "blog/.vuepress/**/*",
  ],
  "exclude": [ // 指定一个排除列表（include的反向操作）
    "node_modules"
  ],
  /*
  "files": [                                   // 指定哪些文件使用该配置（属于手动一个个指定文件）
    "demo.ts"
  ] */
}
